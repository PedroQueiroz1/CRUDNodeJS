const PessoaDao = require("../models/DAO/agenda");

module.exports = {
    async listar (req, res) {
        try{
            const oPessoas = await new PessoaDao().listarTodos();
            return res.json(oPessoas).status(200);
        }catch(error){
            return res.json(error).status(404);
        }
    },

    async adicionar (req, res){
        const oPessoa = req.body;
        try {
           const sPessoa = await new PessoaDao().adicionar(oPessoa);
           return res.json(sPessoa).status(201);
        } catch (error) {
            return res.json(error).status(500); 
        }
    }
}







/*var agendaModel = require('../models/agendaModel')();

module.exports.listar = function(req,res){
    agendaModel.all(function(erro, resultado){
        res.render('site/home',{pessoas:resultado,erros:{},dados:{}});
    });
};

module.exports.adicionar = function(req,res){
    var dados = req.body;

    req.assert('nome','!!! Preencha um Nome.').notEmpty();
    req.assert('email','!!! Preencha um E-mail.').notEmpty();
    req.assert('email','!!! Preencha um E-mail válido.').isEmail();
    req.assert('nome','!!! Nome deve ter de 3 a 20 caracteres.').len(3,20);
    req.assert('numero','!!! Preencha um Número.').notEmpty();
    req.assert('numero','!!! O telefone deve seguir o exemplo: "21912345678".').len(11);

    var validacaoErros = req.validationErrors();

    if(validacaoErros){
        console.log(validacaoErros);
        agendaModel.all(function(erro, resultado){
            res.render('site/home',{pessoas:resultado,erros:validacaoErros,dados:dados});
        });
        return;
    }

    agendaModel.save(dados,function(erro, resultado){
        if(!erro){
        res.redirect('/');
        }else{
            console.log("Erro ao adicionar pessoa");
            res.redirect('/');
        }
    });
};

module.exports.listarPessoa = function(req,res){
 agendaModel.find(req.params.id,function(erro, resultado){
    if(resultado[0] && !erro){
    res.render('site/detalhe',{pessoa:resultado[0]});
}else{
    console.log("Essa pessoa não existe na agenda");
    res.redirect('/');
}
});

async remover(req,res){
    const oId = req.params.id;
    try{
        const aPessoa = await new agendaModel().remover(oId);
        return res.json(aPessoa).status(200);
    }catch(error) {
        return res.json(error).status(404);
    }

}

}*/